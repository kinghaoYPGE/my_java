<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mymybatis.mapper.UserMapper">
    <!--开启二级缓冲-->
    <!--<cache-ref namespace="com.mymybatis.mapper.?"/>-->
    <cache eviction="FIFO" flushInterval="60000" size="512" readOnly="true"/>
    <!-- 自定义返回结果集 -->
    <resultMap id="userMap" type="User">
        <id property="id" column="id" javaType="int"></id>
        <result property="username" column="username" javaType="String"></result>
        <result property="password" column="password" javaType="String"></result>
        <!--当sex为male时，才映射sex属性-->
        <!--<discriminator javaType="String" column="sex">
            <case value="male" resultType="sexResult">
                <result property="sex" column="sex" javaType="String"></result>
            </case>
        </discriminator>-->
        <result property="sex" column="sex" javaType="String"></result>
        <result property="address" column="address" javaType="String"></result>
    </resultMap>
    <!--<resultMap id="userMap" type="User">
      <constructor>  
          <idArg column="id" javaType="int"/>
          <arg column="username" javaType="String"/>
          <arg column="password" javaType="String"/>
          <arg column="sex" javaType="String"/>
          <arg column="address" javaType="String"/>
      </constructor>  
    </resultMap>-->

    <!-- 定义 SQL 语句，其中 id 需要和接口中的方法名一致 -->
    <!-- useGeneratedKeys：实现自动生成主键 -->
    <!-- keyProperty： 唯一标记一个属性 -->
    <!-- parameterType 指明查询时使用的参数类型，resultType 指明查询返回的结果集类型 -->
    <insert id="insertUser" useGeneratedKeys="true" keyProperty="id">
        <!--如果主键不是自增类型，可以使用selectKey生成主键-->
        <!--<selectKey keyProperty="id" resultType="int" order="BEFORE">
          select seq_users.nextval from dual
        </selectKey>-->
        insert into user (username,password,sex,address) values
        (#{username},#{password},#{sex},#{address})
    </insert>

    <update id="updateUser"  parameterType="User">
        update user set
        address=#{address} where
        id=#{id}
    </update>

    <delete id="deleteUser" parameterType="int">
        delete from user where
        id=#{id}
    </delete>

    <sql id="selectAllUser">  
        select * from user 
    </sql> 
    <!-- 如未为 Java Bean 起类别名，resultType="com.shiyanlou.mybatis.model.User" -->
    <!-- 使用resultType时，一定要保证，你属性名与字段名相同；如果不相同，就使用resultMap -->
    <select id="selectUserById" parameterType="int" resultType="User">
        <include refid="selectAllUser" /> where id=#{id}
    </select>

    <select id="selectAllUser" resultMap="userMap">
        <include refid="selectAllUser" />
    </select>
    

</mapper>